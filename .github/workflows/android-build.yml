name: Android CI/CD

on:
  push:
    branches: ["*"]
    tags:
      - "*-build-*"
  pull_request:

jobs:
  # --- CI : build debug sur chaque push/PR ---
  build:
    name: Build Debug APK
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Grant execution rights to gradlew
        run: chmod +x ./gradlew

      - name: Build Debug APK
        run: ./gradlew assembleDebug

  unit-tests:
  name: Unit Tests
  runs-on: ubuntu-latest
  needs: build

  steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: 17
        cache: gradle

    - name: Grant execution rights to gradlew
      run: chmod +x ./gradlew

    - name: Run ServiceDAOTests on emulator
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: 34
        arch: x86_64
        profile: pixel_6
        script: >
          ./gradlew connectedDebugAndroidTest
          -Pandroid.testInstrumentationRunnerArguments.class=com.example.ouestmonbus.ServiceDAOTests
          --stacktrace --no-daemon

    - name: Upload androidTest reports
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: androidTest-report
        path: |
          app/build/reports/androidTests/connected/
          app/build/outputs/androidTest-results/connected/

  # --- CD : déploiement sur Google Play quand un tag est poussé ---
  deploy:
    name: Deploy Release to Google Play
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/') && contains(github.ref, '-build-')

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Decode Keystore
        env:
          KEYSTORE_B64: ${{ secrets.ANDROID_KEYSTORE }}
        run: |
          echo "$KEYSTORE_B64" | base64 --decode > keystore.jks

      - name: Install fastlane
        run: sudo gem install fastlane -N

      - name: Deploy with Fastlane
        env:
          KEYSTORE_PATH: ${{ github.workspace }}/keystore.jks
          KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
          SUPPLY_JSON_KEY: ${{ secrets.GOOGLE_PLAY_JSON }}
        run: fastlane beta